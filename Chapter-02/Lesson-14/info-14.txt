Lesson 14: Chaining Methods in Python OOP
Concept: Implementing and Using Method Chaining for Fluent Interfaces

Method chaining is a technique that allows you to call multiple methods on the same object 
in a single line of code. It makes the code more readable and expressive by creating 
a fluent interface. For method chaining to work, each method in the chain must 
return the object itself or another callable object.

Key Concepts:
Fluent Interface: A design pattern used to create more readable code by chaining 
method calls together.
Returning self: Methods need to return the object (self) to allow further 
method calls in the chain.

Benefits of Method Chaining:
Readability: Reduces the need for repetitive variable assignments and keeps the code compact.
Intuitive: Creates a workflow that is easy to follow and understand.
Efficiency: Allows multiple method calls on a single object without reassigning the result.
Important Considerations:
Ensure each method in the chain returns self or a compatible object to continue the chain.
Be mindful of error handling and maintain method clarity to avoid confusion in complex chains.
Method chaining can be an effective way to create a clean, readable interface for modifying 
and interacting with objects. Use it when you want to make code expressive and reduce 
repetitive assignments.